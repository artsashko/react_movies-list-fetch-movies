{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","components/FindMovie/api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addNewMovie","useState","newMovie","setNewMovie","queryTitle","setQueryTitle","movieNotFound","setMovieNotFound","findMovie","a","fetch","then","response","json","Response","Title","Plot","Poster","imdbID","useEffect","htmlFor","type","id","placeholder","ClassNames","onChange","event","target","value","autoComplete","onClick","App","data","addToMovies","find","ReactDOM","render","document","getElementById"],"mappings":"mxEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,0DCF3BG,EAAY,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EACZC,mBAASP,EAAO,IADJ,mBACrCQ,EADqC,KAC3BC,EAD2B,OAERF,mBAAS,IAFD,mBAErCG,EAFqC,KAEzBC,EAFyB,OAGFJ,oBAAS,GAHP,mBAGrCK,EAHqC,KAGtBC,EAHsB,KAKtCC,EAAS,uCAAG,4BAAAC,EAAA,sECZKxB,EDaQmB,ECZxBM,MAAM,GAAD,OAHG,+CAGH,OAAezB,IACxB0B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDUX,WACVjB,EADU,QAGLkB,UAAaV,EAHR,uBAIdG,GAAiB,GAJH,0BAShBJ,EAAY,CACVlB,MAAOW,EAAMmB,MACb7B,YAAaU,EAAMoB,KACnB7B,OAAQS,EAAMqB,OACd7B,QAAQ,8BAAD,OAAgCQ,EAAMsB,OAAtC,KACPpB,OAAQF,EAAMsB,SAdA,iCCZb,IAAkBjC,IDYL,OAAH,qDAsBf,OAJAkC,qBAAU,WACRZ,GAAiB,KAChB,CAACH,IAGF,oCACE,0BAAMf,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQ+B,QAAQ,eAAjC,eAIA,yBAAK/B,UAAU,WACb,2BACEgC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZlC,UAAWmC,IAAW,QAAS,CAC7B,YAAalB,IAEfmB,SAAU,SAAAC,GAAK,OAAIrB,EAAcqB,EAAMC,OAAOC,QAC9CA,MAAOxB,EACPyB,aAAa,SAIhBvB,GACC,uBAAGjB,UAAU,kBAAb,yCAMJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEgC,KAAK,SACLhC,UAAU,kBACVyC,QAAStB,GAHX,iBASF,yBAAKnB,UAAU,WACb,4BACEgC,KAAK,SACLhC,UAAU,oBACVyC,QAAS,WACP9B,EAAYE,GACZG,EAAc,MALlB,sBAcN,yBAAKhB,UAAU,aACb,wBAAIA,UAAU,SAAd,WACA,kBAAC,EAAca,MEvFV6B,EAAM,WAAO,IAAD,EACO9B,mBAAS+B,GADhB,mBAChBtC,EADgB,KACRuC,EADQ,KAcvB,OACE,yBAAK5C,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWW,YAjBG,SAACE,GACfR,EAAOwC,MAAK,SAAAtC,GAAK,OAAIA,EAAME,SAAWI,EAASJ,WAInDmC,EAAY,GAAD,mBACNvC,GADM,CAETQ,WCXNiC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4773fbcc.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport './FindMovie.scss';\nimport ClassNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from './api';\nimport movies from '../../api/movies.json';\n\nexport const FindMovie = ({ addNewMovie }) => {\n  const [newMovie, setNewMovie] = useState(movies[0]);\n  const [queryTitle, setQueryTitle] = useState('');\n  const [movieNotFound, setMovieNotFound] = useState(false);\n\n  const findMovie = async() => {\n    const movie = await getMovie(queryTitle);\n\n    if (!movie.Response || !queryTitle) {\n      setMovieNotFound(true);\n\n      return;\n    }\n\n    setNewMovie({\n      title: movie.Title,\n      description: movie.Plot,\n      imgUrl: movie.Poster,\n      imdbUrl: `https://www.imdb.com/title/${movie.imdbID}/`,\n      imdbId: movie.imdbID,\n    });\n  };\n\n  useEffect(() => {\n    setMovieNotFound(false);\n  }, [queryTitle]);\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={ClassNames('input', {\n                'is-danger': movieNotFound,\n              })}\n              onChange={event => setQueryTitle(event.target.value)}\n              value={queryTitle}\n              autoComplete=\"off\"\n            />\n          </div>\n\n          {movieNotFound && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                addNewMovie(newMovie);\n                setQueryTitle('');\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        <MovieCard {...newMovie} />\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addNewMovie: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=f90e9294&t=';\n\nexport function getMovie(title) {\n  return fetch(`${BASE_URL}${title}`)\n    .then(response => response.json());\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, addToMovies] = useState(data);\n\n  const addNewMovie = (newMovie) => {\n    if (movies.find(movie => movie.imdbId === newMovie.imdbId)) {\n      return;\n    }\n\n    addToMovies([\n      ...movies,\n      newMovie,\n    ]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addNewMovie={addNewMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}